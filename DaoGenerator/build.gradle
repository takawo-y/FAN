import de.greenrobot.daogenerator.DaoGenerator;
import de.greenrobot.daogenerator.Entity;
import de.greenrobot.daogenerator.Schema;
import de.greenrobot.daogenerator.Property;
import de.greenrobot.daogenerator.ToMany;

// DBのバージョン
def dbVersion = 0.1
// 出力先のパッケージ名
def daoOutputPackage = "com.takawo.fan.db"
// 出力先のディレクトリパス（generator実行前にcleanするのでソースは分けたほうがいい）
def daoOutputDirPath = "app/src-gen/main/java"

// generatorで作成したディレクトリを削除する
task daoGeneratorClean(type: Delete) {
    delete "../${daoOutputDirPath}"
}

task daoGenerator {
    description 'daoを生成します'

    doLast {
        Schema schema = new Schema(dbVersion, daoOutputPackage);

        // ------------- この辺でテーブル定義 START -------------------

        Entity player = schema.addEntity("FandbPlayer");
        player.addIdProperty().autoincrement().unique();
        player.addStringProperty("playerName").notNull();
        player.addStringProperty("gameEvent").notNull();
        player.addLongProperty("resultType").notNull();  //0:score, 1:time
        player.addStringProperty("category");
        player.addStringProperty("playerColor");
        player.addStringProperty("playerFontColor");
        player.addLongProperty("playerIconColor");  //0:白, 1:グレイ
        player.addStringProperty("playerImagePath");
        player.addStringProperty("playerComment");

        Entity game = schema.addEntity("FandbGame");
        Property playerId = game.addLongProperty("playerId").notNull().getProperty();
        game.addIdProperty().autoincrement().unique();
        game.addLongProperty("gameType").notNull();  //0:生観戦、1:TV生観戦、2:TV録画観戦、3:出場
        game.addStringProperty("gameCategory");
        game.addStringProperty("gameInfo");
        game.addStringProperty("place");
        game.addStringProperty("weather");
        game.addStringProperty("temperature");
        game.addDateProperty("gameDay").notNull();
        game.addStringProperty("startTime");
        game.addStringProperty("endTime");
        game.addStringProperty("opposition");
        game.addStringProperty("oppositionImagePath");
        game.addStringProperty("result");
        game.addStringProperty("resultScore");
        game.addStringProperty("resultTime");
        game.addStringProperty("comment");
        game.addToOne(player, playerId);
        ToMany playerToGame = player.addToMany(game, playerId);
        playerToGame.setName("games");

        Entity image = schema.addEntity("FandbImage");
        image.addLongProperty("playerId").notNull();
        image.addLongProperty("gameId").notNull();
        image.addIdProperty().autoincrement().unique();
        image.addStringProperty("path");
        image.addStringProperty("title");
        image.addStringProperty("comment");

        // ------------- この辺でテーブル定義 END -------------------

        try {
            // 未作成ならディレクトリを作る
            File file = new File(daoOutputDirPath);
            if (!file.exists()) {
                file.mkdirs();
            }
            // Dao生成!
            new DaoGenerator().generateAll(schema, daoOutputDirPath);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}